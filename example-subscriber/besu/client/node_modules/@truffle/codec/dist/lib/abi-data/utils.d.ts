import { Abi as SchemaAbi } from "@truffle/contract-schema/spec";
import * as Ast from "../ast";
import * as Abi from "./types";
export declare const DEFAULT_CONSTRUCTOR_ABI: Abi.ConstructorAbiEntry;
export declare function schemaAbiToAbi(abiLoose: SchemaAbi): Abi.Abi;
export declare function computeSelectors(abi: Abi.Abi | undefined): Abi.FunctionAbiBySelectors | undefined;
export declare function abiHasPayableFallback(abi: Abi.Abi | undefined): boolean | undefined;
export declare function abiSignature(abiEntry: Abi.FunctionAbiEntry | Abi.EventAbiEntry): string;
export declare function abiTupleSignature(parameters: Abi.AbiParameter[]): string;
export declare function abiSelector(abiEntry: Abi.FunctionAbiEntry | Abi.EventAbiEntry): string;
export declare function abisMatch(entry1: Abi.AbiEntry | undefined, entry2: Abi.AbiEntry | undefined): boolean;
export declare function definitionMatchesAbi(abiEntry: Abi.AbiEntry, definition: Ast.AstNode, referenceDeclarations: Ast.AstNodes): boolean;
export declare function topicsCount(abiEntry: Abi.EventAbiEntry): number;
export declare function abiEntryIsObviouslyIllTyped(abiEntry: Abi.AbiEntry): boolean;
export declare function abiEntryHasStorageParameters(abiEntry: Abi.AbiEntry): boolean;
